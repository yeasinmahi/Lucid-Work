if (Program.args.Length > 0)
            {
                using (PipeStream pipeClient =
                       new AnonymousPipeClientStream(PipeDirection.In, Program.args[0]))
                {
                    // Show that anonymous Pipes do not support Message mode. 
                    try
                    {
                        Console.WriteLine("[CLIENT] Setting ReadMode to \"Message\".");
                        pipeClient.ReadMode = PipeTransmissionMode.Message;
                    }
                    catch (NotSupportedException e)
                    {
                        Console.WriteLine("[CLIENT] Execption:\n    {0}", e.Message);
                    }

                    Console.WriteLine("[CLIENT] Current TransmissionMode: {0}.",
                       pipeClient.TransmissionMode);

                    using (StreamReader sr = new StreamReader(pipeClient))
                    {
                        // Display the read text to the console 
                        string temp;

                        // Wait for 'sync message' from the server. 
                        do
                        {
                            //Console.WriteLine("[CLIENT] Wait for sync...");
                            temp = sr.ReadLine();
                        }
                        while (!temp.StartsWith("SYNC"));
                        String x = "";
                        // Read the server data and echo to the console. 
                        while ((temp = sr.ReadLine()) != null)
                        {
                            x += temp;
                            // Console.WriteLine("[CLIENT] Echo: " + temp);
                        }

                        label1.Text = x;
                    }
                }
            }